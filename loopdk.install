<?php

/**
 * @file
 * Install, update and uninstall functions for the Loop installation profile.
 */

/**
 * Implements hook_install().
 *
 * Setting up default and admin theme. Activate node editing from admin theme.
 * Enable user tracking via Google Analytics.
 * Setup "Page not found" and "Access denied" pages.
 *
 * @see system_install()
 */
function loopdk_install() {
  // Set default variables.
  $default_theme = 'loop';
  $admin_theme = 'seven';

  // Enable themes.
  theme_enable(array($default_theme, $admin_theme));

  // Enable $default_theme.
  variable_set('theme_default', $default_theme);

  // Enable $admin_theme.
  variable_set('admin_theme', $admin_theme);

  // Activate admin theme when editing a node.
  variable_set('node_admin_theme', '1');

  // Enable User tracking in Google Analytics.
  variable_set('googleanalytics_trackuserid', 1);

  // Don't show any errors.
  variable_set('error_level', 0);

  // Enable page cache for anonymous users.
  variable_set('cache', 1);

  // Compress cached pages.
  variable_set('page_compression', 1);

  // Preprocess assets.
  variable_set('preprocess_css', 1);
  variable_set('preprocess_js', 1);

  // Setup page not found.
  loopdk_page_not_found();

  // Setup access denied page.
  loopdk_access_denied_page();

  // Ignore any other install messages.
  drupal_get_messages();

  // Clear caches.
  drupal_flush_all_caches();
}

/**
 * Add a basic page for page-not-found.
 */
function loopdk_page_not_found() {
  $node = new stdClass();
  $node->uid = 1;

  $node->title = 'Page not found';
  $node->type = 'page';
  $node->language = 'und';
  $node->field_ding_page_body = array(
    'und' => array(
      array(
        'value' => 'Page not found',
        'format' => 'editor',
        'safe_value' => '<p>Page not found</p>',
      ),
    ),
  );

  $node->path = array(
    'alias' => 'page-not-found',
    'language' => 'und',
  );

  node_save($node);

  // Set the 404 page.
  variable_set('site_404', 'page-not-found');
}

/**
 * Add a basic access denied page.
 */
function loopdk_access_denied_page() {
  $node = new stdClass();
  $node->uid = 1;

  $node->title = 'Access denied';
  $node->type = 'page';
  $node->language = 'und';
  $node->field_ding_page_body = array(
    'und' => array(
      array(
        'value' => 'Access denied',
        'format' => 'editor',
        'safe_value' => '<p>Access denied</p>',
      ),
    ),
  );

  $node->path = array(
    'alias' => 'access_denied',
    'language' => 'und',
  );

  node_save($node);

  // Set the 404 page.
  variable_set('site_403', 'access_denied');
}

/**
 * Update the database with the newest translations.
 */
function loopdk_translation_update() {
  // Update build-in translation group.
  $file = new stdClass();
  $file->uri = DRUPAL_ROOT . '/profiles/loopdk/translations/default.da.po';
  $file->filename = basename($file->uri);
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'default');
}

/**
 * Update our own translations.
 */
function loopdk_update_7001() {
  loopdk_translation_update();
}

/**
 * Updated translations.
 */
function loopdk_update_7002() {
  loopdk_translation_update();
}

/**
 * Delete nodes and content types for leaf, tree and index.
 */
function loopdk_update_7003() {
  $types = array(
    'leaf',
    'index',
    'tree',
  );
  foreach ($types as $type) {
    // First, delete nodes.
    $results = db_select('node', 'n')
      ->fields('n', array('nid'))
      ->condition('type', $type)
      ->execute();
    foreach ($results as $result) {
      $nids[] = $result->nid;
    }
    if (!empty($nids)) {
      node_delete_multiple($nids);
      drupal_set_message(t('%count nodes has been deleted.', array('%count' => count($nids))));
    }
    // Then, delete content type.
    if (node_type_load($type)) {
      node_type_delete($type);
      variable_del('node_preview_' . $type);
      drupal_set_message(t('%type content type has been deleted.', array('%type' => $type)));
    }
  }
  node_types_rebuild();
  menu_rebuild();

  // Uninstall module.
  if (module_exists('loop_external_data')) {
    module_disable(array('loop_external_data'));
    drupal_uninstall_modules(array('loop_external_data'));
  }
}

/**
 * Updated translations.
 */
function loopdk_update_7004() {
  loopdk_translation_update();
}
